<?php

declare(strict_types=1);

namespace Shlinkio\Shlink\Common\Cache;

use Predis\Client;
use Predis\ClientInterface;
use Predis\Connection\Replication\ReplicationInterface;

use function array_key_exists;
use function class_alias;

// This file is a fix for https://github.com/shlinkio/shlink/issues/1684, until symfony/cache supports predis 2
// phpcs:disable
class_alias(ReplicationInterface::class, 'Predis\Connection\Aggregate\ReplicationInterface');

class ShlinkPredisClient extends Client
{
    public function getClientFor(string $name): ClientInterface
    {
        return parent::getClientBy('role', $name);
    }

    public function __call($commandID, $arguments)
    {
        // Work around the incompatibility of SCAN with `null` cursor when using Redis 7.4, by defaulting to 0 instead.
        // The `$predisClient->scan(null, ...)` call happens in Symfony cache. See https://github.com/symfony/symfony/issues/58660
        // Using `0` instead of `null` works for older versions too.
        //
        // This workaround should be temporary, but it's still to be determined if this should be fixed in symfony/cache
        // side or predis side.
        //
        // The cursor is the first argument (index 0)
        if ($commandID === 'scan' && array_key_exists(0, $arguments) && $arguments[0] === null) {
            $arguments[0] = 0;
        }

        return parent::__call($commandID, $arguments); // TODO: Change the autogenerated stub
    }
}
